Asset Dependency Manager Readme
----------------------------------------------------------------
* Web:        http://www.codeofficer.com/
* Email:      spam*@*codeofficer*dot*com
* JQuery:     http://www.jquery.com/
* JQuery UI:  http://ui.jquery.com/
* Based on    http://github.com/arya/js_dependency_manager/tree/master

(Credit goes to Arya for initial inspiration with his JS dependency manager)

ADM is a plugin to dynamically manage a complex array of xxx.js and xxx.css dependencies. 
It will assist you in defining those dependencies and outputting the appropriate javascript_include
and stylesheet_link tags in your final layout.

I found this mostly useful when dealing with JQuery and JQuery UI's complex arrangement of js and css theme files. 
An alternative is to collect all assets into one file and depend on caching ... at least in the case of Jquery UI
though that would be 350k of scripts you might or might not use.

assumptions:
you prefer to keep your js plugins as seperate files
your js and css files all have corresponding ".xxx" extensions
you keep your *.js files in you javascripts directory
you keep your *.css files in your stylesheets directory

Example
=======

In your Application Helper ...

Here you define a method declaring your asset dependencies. This method, which should return a Hash, 
matches keys to values, which can be of type String, Array or Symbol. Thus you create a 
dictionary of keys representing files you might conditionally include later on in the views for 
which they are needed. Values of Array can be composed of Symbols and Strings. 

There is also a special key of :defaults which if set to true will make a dependency for rails 
own JAVASCRIPT_DEFAULT_SOURCES.

    module ApplicationHelper
      def asset_dependencies
        {
        :defaults =>      true,
        :core_scripts =>  [ 'one_script.js', 'two_script.js', :defaults, 'one_style.css' ],
        :tabs =>          [ :core_scripts, 'tabs.js', 'tabs.css' ],
        :slider =>        [ 'slider/slider_one.js', 
                            'slider/slider_two.js',
                            'slider/slider.css' ],
        :testing =>       'whatever.js',
        :whatever =>      [ :defaults, :tabs ],
        :thing =>         :testing
        }
      end      
    end

In your Views / Partials ...

You'll now use a view helper called assets_for to declare which assets need to be loaded to support 
the current view or partial.

    <% assets_for :tabs, :slider, :whatever %>
    <!-- more html etc ... -->

In your Layout file ...

    <%= asset_dependency_manager_tags %>

And that will return ...

<script src="/javascripts/controls.js?1217670303" type="text/javascript"></script>
<script src="/javascripts/dragdrop.js?1217637539" type="text/javascript"></script>
<script src="/javascripts/effects.js?1217637539" type="text/javascript"></script>
<script src="/javascripts/one_script.js" type="text/javascript"></script>
<script src="/javascripts/prototype.js?1217637539" type="text/javascript"></script>
<script src="/javascripts/slider/slider_one.js" type="text/javascript"></script>
<script src="/javascripts/slider/slider_two.js" type="text/javascript"></script>
<script src="/javascripts/tabs.js" type="text/javascript"></script>
<script src="/javascripts/two_script.js" type="text/javascript"></script>
<link href="/stylesheets/one_style.css" media="screen" rel="stylesheet" type="text/css" />
<link href="/stylesheets/slider/slider.css" media="screen" rel="stylesheet" type="text/css" />
<link href="/stylesheets/tabs.css" media="screen" rel="stylesheet" type="text/css" />

Copyright (c) 2008 CodeOfficer, released under the MIT license
